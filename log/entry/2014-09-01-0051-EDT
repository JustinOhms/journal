Mon Sep  1 00:51:58 EDT 2014

#~ Working implementation of the `journal-init` command completed
While I was working through this I learned a few things about the cmd package.
First, for testability, I had to add a `SetWd(string)` method to the interface.
This ensures that each instance of a command verb can execute within it's own context and enabled testing.
Second, for the actual single verb executable to have customized usage it had to provide the flagset to the verb constructor.
Doing this enables wrapping customizing the usage for the command in the context of a single verb executable.
I also think this will enable pretty usage for the multi verb executable as well, wait and see.

I also noticed that the fix function in the `journal/fix` package commit's it's own changes.
This may need to be changed so that they are bubbled out to the caller as I did with the `journal/init` package.
Though, this may not be technically feasible, but a quick glance over the source didn't glean if it was or wasn't.

Thinking I'll work on the fix verb & executable tomorrow.

OH, also.
I didn't really clarify much about the commit sequence executed by the `init` verb.
Something is nagging me that in the future there will be more then the single commit generated by initialization;
So I guess I was just leaving it until then.
I did verify manually that it was working correctly, so I know it works, but it would be nice to have it solidified.

## [active] journal version 1
- [ ] idea "package journal/cmd" completed
- [ ] commands implemented
    - [x] journal init
    - [ ] journal fix
    - [ ] journal new
    - [ ] journal help


## [active] package journal/cmd
This is package is routines shared by all command packages.
I expect this package can be extracted into it's own project in the future.

- [ ] journal/cmd
    - [ ] ALL commands MUST accept the -h flag

- [x] package journal/cmd_verbs/init
    - [x] options
        - [x] -no-commit | Will not commit an changes in the directory to git repository.

- [ ] package journal/cmd_verbs/fix
    - [ ] options
        - [ ] -ignore-git     | Will not commit any fixes or modifications to git
        - [ ] -print-hash-log | Print out the hash log and commit messages for the entire fix.

- [ ] package journal/cmd_verbs/new
    - [ ] options
        - [ ] -ignore-git | Will not commit any ideas from the new entry or the entry itself to git.
        - [ ] -no-edit    | Will not open the entry in an interactive editor
                          | This options implies -ignoregit because the entry created will not be committed.

- [ ] package journal/cmd_verbs/help
    - example usage
```
>$ journal help init
Print formatted usage and options for `init` command.
>$ journal help new
Print formatted usage and options for `new` command.
```
    - [ ] will only accept registered commands as an argument
    - [ ] will execute the registered command with -h flag as the only argument


## [active] package journal/fix
- [ ] A function to check if a journal directory can be fixed
    - is directory initialized?
        - yes - can NOT be fixed
        - no  - does directory contain entries?
            - yes - can be fixed
            - no  - can NOT be fixed

- [ ] A function to check if a journal directory needs to be fixed
    - is directory initialized?
        - yes - does not need fixed
        - no  - does directory contain entries?
            - yes - needs fixed
            - no  - needs initialized


Mon Sep  1 01:03:44 EDT 2014
