Thu Jan 30 16:38:29 EST 2014

# Completed data loss prevention changes to entry package
Fixed up the intended work flow to avoid data loss.
See the Completed Idea from this log.

I also specified that an entry must have a commit message header.
The user of the entry package is intended to re-open the editor if a commit message is missing.
When I was doing this I caught an issue with Close()'ing an entry that doesn't have any Idea blocks.
It was reaching EOF and returning that from Close() as an error which was incorrect behavior.
This could use a separate spec in the future, but for now is covered by the commit message spec.

The entry package is ready to be implemented by the `new` command.
But before this happens the Idea storage design needs to be implemented.
I torn about what level should do the directory management for the Idea storage design.
Should be it in the idea package? Maybe a type Ideas, that represents the directory.
That would equate to something like this in use.

```go
ideas, _ := openEntry.Ideas()
for _, idea := range ideas {
    // Would be responsible for assigning an ID
    journal.Ideas.WriteIdea(idea)
}

for _, idea := range ideas {
    journal.Commit(idea)
}

closedEntry, _ := openEntry.Close()
```

Pretty sure this is what I want.
I like the look of it right now.
Might change my mind by the time I get to it.

Thu Jan 30 16:56:35 EST 2014
