Wed Feb  5 10:16:57 EST 2014

#~ Working on the idea directory management
This session has been really productive.

I wrote everything in this order 

-> specification skeleton ->
    -> documentation and type'ing ->
    -> specification ->
    -> implementation

Working like this feels extremely productive and design oriented.
It also focuses on the functionality and the documentation above all.
Writing the spec skeleton makes a flowing todo list.
Writing the documentation produces types and public behavior.
Having that documentation helps to write the details of the specification.
a.k.a the expected public behavior.

Happy with this method and I hope it continues to feel as productive.

- [twitch session](http://www.twitch.tv/pippipong/b/500939209)

## [active] `idea/` directory
- [X] initialize an empty directory
    - [X] with the next available idea of 1
    - [X] with an empty active idea index
    - [X] and return a commitable

- [ ] `idea/nextid` will store the next available id
- [ ] `idea/active` will index which ideas are active
    - [ ] 1 id per line

- [ ] Create a new idea
    - [ ] Retrieve nextid and increment
        - [ ] Returns a CommitableChange
    - [ ] Write idea to `idea/{id}`
        - [ ] Returns a CommitableChange
    - [ ] If it is active, append id to `idea/active` index
        - [ ] Returns a CommitableChange

    - [ ] Create a Commitable with all 3 changes and a msg
        - [ ] commit message format "IDEA - {id} - Created"

- [ ] Update an existing idea
    - [ ] Write idea to `idea/{id}`
        - [ ] Returns a CommitableChange
    - [ ] If it is active, make sure it exists in `idea/active` index
        - [ ] If modified return a CommitableChange
    - [ ] If it is inactive, make sure it doesn't exist in `idea/active` index
        - [ ] If modified return a CommitableChange

    - [ ] Create a Commitable with all 3 changes and a msg
        - [ ] msg format "IDEA - {id} - Updated"

## [active] `fix` command
- [ ] Mark fix beginning with an empty git commit
    - message "FIX - Journal - Begin"

- [ ] fix journal
    - fix | does NOT store ideas in `idea/` directory
        - fix ideas
    - fix | has entries that don't conform to the current feature set
        - fix entries
    - fix | does NOT store entries in `entry/` directory
        - create `entry/` directory and move all entries
        - message "FIX - Journal - Moved all entries to entry/ directory"

- [ ] fix ideas
    - [ ] create `idea/` directory structure
        - message "FIX - Journal - Created idea/ directory structure"
    - [ ] Parse ideas from entries starting from oldest
        - If an idea doesn't exist in `idea/' w/ matching name
            - Create the idea
            - message "FIX - Idea - Created - {timestamp}"
        - If an idea exists in `idea/` /w matching name
            - Update the idea
            - message "FIX - Idea - Modified - {timestamp}"

- [ ] fix entries
    - fix | does NOT have a commit message header w/ format "#~ Commit Message\n"
        - change line format from "# Text\n" -> "#~ Text\n"
        - message "FIX - Entry - Added commit message header"

    - fix | does NOT have a closed timestamp as the final line
        - append a closed timestamp for 30secs after opened timestamp
        - message "FIX - Entry - Added closed timestamp"

    - fix | does have ideas in the body
        - remove ideas
        - message "FIX - Entry - Removed ideas from body"

    - [ ] Current Features
        - should have a timestamp as the first line
        - should have a commit msg line w/ format "#~ Commit Msg\n"
        - should NOT have any ideas in the body
        - should have a timestamp as the final line

- [ ] Mark fix complete with an empty git commit
    - message "FIX - Journal - Complete"

Wed Feb  5 10:27:55 EST 2014
